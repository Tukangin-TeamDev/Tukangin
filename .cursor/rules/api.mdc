---
description: 
globs: 
alwaysApply: true
---
API RESTful
4.1. Desain Endpoint Utama
•	Autentikasi (Auth):
o	POST /api/auth/register: Registrasi user baru
o	POST /api/auth/login: Login dengan pengiriman JWT
o	POST /api/auth/2fa: Verifikasi dua faktor untuk akun sensitif
o	POST /api/auth/refresh: Refresh token
•	User & Role Management:
o	GET /api/users/:id: Dapatkan detail user
o	PUT /api/users/:id: Update profil
o	DELETE /api/users/:id: Hapus user (khusus admin)
•	Provider & Layanan:
o	GET /api/providers: List penyedia
o	POST /api/providers: Registrasi/Update profil provider
o	GET /api/services: List layanan (fixed & konsultatif)
o	POST /api/services: Provider menambahkan layanan baru
o	PUT /api/services/:id: Update layanan
•	Order & Transaksi:
o	POST /api/orders: Membuat order baru (penanganan fixed atau konsultatif)
o	GET /api/orders/:id: Detail order
o	PUT /api/orders/:id/confirm: Konfirmasi order selesai (trigger release escrow)
o	POST /api/orders/:id/dispute: Buka dispute jika ada sengketa
•	Pembayaran:
o	POST /api/payment/initiate: Inisiasi pembayaran (integrasi gateway dan escrow)
o	POST /api/payment/webhook: Endpoint untuk menerima notifikasi pembayaran
•	Chat & Notifikasi:
o	POST /api/chat/send: Mengirim pesan antar user
o	GET /api/chat/:orderId: Mengambil riwayat chat untuk order tertentu
o	GET /api/notifications: Fetch notifikasi user
•	Admin (Manajemen Sistem):
o	GET /api/admin/audit-log: Ambil log audit seluruh aktivitas
o	PUT /api/admin/users/:id/role: Perubahan peran user
o	GET /api/admin/reports: Dasbor laporan statistik, transaksi, dispute

4.2. Middleware API
Setiap request ke API akan melalui middleware:
•	JWT Authentication Middleware: Memvalidasi token, lalu menambahkan data user (id, peran) ke request.
•	Role-based Authorization Middleware (RBAC): Memeriksa akses berdasarkan peran (admin, provider, customer).
•	Input Validation Middleware: Menggunakan library seperti Joi/Zod/express-validator untuk memastikan data request valid dan aman.
•	Rate Limiting: Menghindari abuse API dengan batasan request per IP.
•	Helmet: Mengatur header keamanan HTTP.
•	CORS: Konfigurasi agar hanya origin frontend yang diizinkan.
•	Error Handling Middleware: Menangani error secara terpusat dan mengirim respons yang konsisten.
•	Audit Logging Middleware (khusus admin): Mencatat aktivitas penting (login, perubahan data, transaksi) ke modul audit log.

